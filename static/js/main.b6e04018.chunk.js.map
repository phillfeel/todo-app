{"version":3,"sources":["components/TodoItem.jsx","App.jsx","index.js"],"names":["TodoItem","text","color","id","setTasks","tasks","completed","todoItemRef","React","useRef","ref","className","htmlFor","type","defaultChecked","onChange","e","map","item","current","target","checked","changeInputCheck","xmlns","viewBox","d","onClick","newValue","window","prompt","editTask","filter","index","colors","App","useState","currentColor","setCurrentColor","firstStart","setFirstStart","localStorage","getItem","JSON","parse","setItem","stringify","inputRef","length","obj","onKeyUp","key","newId","addTask","value","focus","placeholder","getAttribute","classList","contains","add","handlePickColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6e04018.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TodoItem({ text, color, id, setTasks, tasks, completed }) {\n  const todoItemRef = React.useRef();\n\n  const removeItem = () => {\n    setTasks(\n      tasks\n        .filter((item) => item.id !== +todoItemRef.current.id)\n        .map((item, index) => {\n          item.id = index + 1;\n          return item;\n        })\n    );\n  };\n\n  const editTask = () => {\n    const newValue = window.prompt(\"Редактировать задачу\", \"\");\n    if (newValue) {\n      setTasks(\n        tasks.map((item) => {\n          if (item.id === +todoItemRef.current.id) {\n            item.text = newValue;\n          }\n          return item;\n        })\n      );\n    }\n  };\n\n  const changeInputCheck = (e) => {\n    setTasks(\n      tasks.map((item) => {\n        if (item.id === +todoItemRef.current.id) {\n          item.completed = e.target.checked;\n        }\n        return item;\n      })\n    );\n  };\n\n  return (\n    <div ref={todoItemRef} id={id} className=\"todo-item\">\n      <div className=\"todo-checkbox\">\n        <label htmlFor={`todo-${id}`}>\n          <input\n            type=\"checkbox\"\n            id={`todo-${id}`}\n            defaultChecked={completed}\n            onChange={(e) => changeInputCheck(e)}\n          />\n          <div>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n              <path d=\"M505 75a26 26 0 00-37 0L162 382 44 264a26 26 0 00-37 37l136 136c10 10 27 9 37 0l325-325c10-10 9-27 0-37z\"></path>\n            </svg>\n          </div>\n        </label>\n      </div>\n      <div className={`todo-delimiter ${color}`}></div>\n      <p className=\"todo-text\">{text}</p>\n      <div className=\"todo-actions\">\n        <svg\n          onClick={() => editTask()}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 384 384\"\n        >\n          <path d=\"M0 304v80h80l236-236-80-80zM378 56L328 6c-8-8-22-8-30 0l-39 39 80 80 39-39c8-8 8-22 0-30z\"></path>\n        </svg>\n        <svg\n          onClick={() => removeItem()}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 96 96\"\n        >\n          <path d=\"M63 48l32-33v-2L83 1a2 2 0 00-2 0L48 33 15 1h-2L1 13v2l32 33L1 81v2l12 12a2 2 0 002 0l33-32 33 32a2 2 0 002 0l12-12v-2L63 48z\"></path>\n        </svg>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoItem;\n","import React, { useEffect } from \"react\";\nimport TodoItem from \"./components/TodoItem\";\n\nconst colors = [\"grey\", \"red\", \"blue\", \"orange\", \"green\"];\n\nfunction App() {\n  const [currentColor, setCurrentColor] = React.useState(`${colors[0]}`);\n  const [firstStart, setFirstStart] = React.useState(true);\n  const [tasks, setTasks] = React.useState([\n    {\n      id: 1,\n      text: \"Запустить Todo by Bykov Philipp.\",\n      color: \"green\",\n      completed: true,\n    },\n    {\n      id: 2,\n      text: \"Выбрать цвет для заметки\",\n      color: \"blue\",\n      completed: false,\n    },\n    {\n      id: 3,\n      text: \"Написать заметку\",\n      color: \"orange\",\n      completed: false,\n    },\n    {\n      id: 4,\n      text: \"Изменить её текст и удалить\",\n      color: \"grey\",\n      completed: false,\n    },\n    {\n      id: 5,\n      text: \"Узнать что заметки сохраняются при перезагрузке страницы\",\n      color: \"green\",\n      completed: false,\n    },\n  ]);\n\n  if (firstStart) {\n    if (!localStorage.getItem(\"tasks\")) {\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    } else {\n      setTasks(JSON.parse(localStorage.getItem(\"tasks\")));\n    }\n    setFirstStart(false);\n  } else {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n\n  /* \n  if (!localStorage.getItem(\"tasks\")) {\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      console.log(\"new write local store\");\n    } else {\n      setTasks(JSON.parse(localStorage.getItem(\"tasks\")));\n      console.log(\"parse and replace\");\n    }\n  */\n\n  /*  localStorage.setItem(\"tasks\", JSON.stringify(tasks)); */\n\n  const inputRef = React.useRef();\n\n  const addTask = (text, color) => {\n    let newId = tasks[tasks.length - 1].id + 1;\n    setTasks([\n      ...tasks,\n      { id: newId, text: text, color: color, completed: false },\n    ]);\n  };\n\n  const handleEnterInput = (e) => {\n    if (e.key === \"Enter\") {\n      addTask(inputRef.current.value, currentColor);\n      e.target.value = \"\";\n      setCurrentColor(\"grey\");\n      e.target.focus();\n    }\n  };\n\n  const handlePickColor = (e) => {\n    const target = e.target;\n    setCurrentColor(target.getAttribute(\"color\"));\n    if (!target.classList.contains(\"active\")) {\n      target.classList.add(\"active\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"todo\">\n        <h2>Список задач ({tasks.length})</h2>\n        {tasks.map((obj) => (\n          <TodoItem\n            setTasks={setTasks}\n            tasks={tasks}\n            id={obj.id}\n            key={obj.id}\n            text={obj.text}\n            color={obj.color}\n            completed={obj.completed}\n          />\n        ))}\n        <div className=\"todo-input\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            onKeyUp={handleEnterInput}\n            placeholder=\"Текст задачи...\"\n          />\n          <ul>\n            {colors.map((color) => (\n              <li\n                key={color}\n                color={color}\n                onClick={(e) => handlePickColor(e)}\n                className={`todo-color ${\n                  color === currentColor ? color + \" active\" : color\n                }`}\n              ></li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}