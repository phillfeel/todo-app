[{"/Users/philipp/Documents/code for REACT/express Course 1 mounth/3-todo-app/src/index.js":"1","/Users/philipp/Documents/code for REACT/express Course 1 mounth/3-todo-app/src/App.jsx":"2","/Users/philipp/Documents/code for REACT/express Course 1 mounth/3-todo-app/src/components/TodoItem.jsx":"3"},{"size":222,"mtime":1610997374070,"results":"4","hashOfConfig":"5"},{"size":3394,"mtime":1614028973316,"results":"6","hashOfConfig":"5"},{"size":2306,"mtime":1614026504150,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xvxtgp",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/philipp/Documents/code for REACT/express Course 1 mounth/3-todo-app/src/index.js",[],"/Users/philipp/Documents/code for REACT/express Course 1 mounth/3-todo-app/src/App.jsx",["15"],"import React, { useEffect } from \"react\";\nimport TodoItem from \"./components/TodoItem\";\n\nconst colors = [\"grey\", \"red\", \"blue\", \"orange\", \"green\"];\n\nfunction App() {\n  const [currentColor, setCurrentColor] = React.useState(`${colors[0]}`);\n  const [firstStart, setFirstStart] = React.useState(true);\n  const [tasks, setTasks] = React.useState([\n    {\n      id: 1,\n      text: \"Запустить Todo by Bykov Philipp.\",\n      color: \"green\",\n      completed: true,\n    },\n    {\n      id: 2,\n      text: \"Выбрать цвет для заметки\",\n      color: \"blue\",\n      completed: false,\n    },\n    {\n      id: 3,\n      text: \"Написать заметку\",\n      color: \"orange\",\n      completed: false,\n    },\n    {\n      id: 4,\n      text: \"Изменить её текст и удалить\",\n      color: \"grey\",\n      completed: false,\n    },\n    {\n      id: 5,\n      text: \"Понять что это удобно и заметки все заметки сохранятся\",\n      color: \"green\",\n      completed: false,\n    },\n  ]);\n\n  if (firstStart) {\n    if (!localStorage.getItem(\"tasks\")) {\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    } else {\n      setTasks(JSON.parse(localStorage.getItem(\"tasks\")));\n    }\n    setFirstStart(false);\n  } else {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }\n\n  /* \n  if (!localStorage.getItem(\"tasks\")) {\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      console.log(\"new write local store\");\n    } else {\n      setTasks(JSON.parse(localStorage.getItem(\"tasks\")));\n      console.log(\"parse and replace\");\n    }\n  */\n\n  /*  localStorage.setItem(\"tasks\", JSON.stringify(tasks)); */\n\n  const inputRef = React.useRef();\n\n  const addTask = (text, color) => {\n    let newId = tasks[tasks.length - 1].id + 1;\n    setTasks([\n      ...tasks,\n      { id: newId, text: text, color: color, completed: false },\n    ]);\n  };\n\n  const handleEnterInput = (e) => {\n    if (e.key === \"Enter\") {\n      addTask(inputRef.current.value, currentColor);\n      e.target.value = \"\";\n      setCurrentColor(\"grey\");\n      e.target.focus();\n    }\n  };\n\n  const handlePickColor = (e) => {\n    const target = e.target;\n    setCurrentColor(target.getAttribute(\"color\"));\n    if (!target.classList.contains(\"active\")) {\n      target.classList.add(\"active\");\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"todo\">\n        <h2>Список задач ({tasks.length})</h2>\n        {tasks.map((obj) => (\n          <TodoItem\n            setTasks={setTasks}\n            tasks={tasks}\n            id={obj.id}\n            key={obj.id}\n            text={obj.text}\n            color={obj.color}\n            completed={obj.completed}\n          />\n        ))}\n        <div className=\"todo-input\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            onKeyUp={handleEnterInput}\n            placeholder=\"Текст задачи...\"\n          />\n          <ul>\n            {colors.map((color) => (\n              <li\n                key={color}\n                color={color}\n                onClick={(e) => handlePickColor(e)}\n                className={`todo-color ${\n                  color === currentColor ? color + \" active\" : color\n                }`}\n              ></li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/philipp/Documents/code for REACT/express Course 1 mounth/3-todo-app/src/components/TodoItem.jsx",[],{"ruleId":"16","severity":1,"message":"17","line":1,"column":17,"nodeType":"18","messageId":"19","endLine":1,"endColumn":26},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]